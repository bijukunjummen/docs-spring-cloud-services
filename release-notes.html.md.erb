---
title: Release Notes for Spring Cloud&reg; Services on Pivotal Cloud Foundry
owner: Spring Cloud Services
---

<html class="list-style-none"></html>

<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }

    .note.warning:before {
        color: #f99;
     }
</style>

Release notes for [Spring Cloud Services for Pivotal Cloud Foundry](https://network.pivotal.io/products/p-spring-cloud-services)

## <a id="1-5-0-migrating-from-1-4-x"></a>Migrating from 1.4.x

If you are upgrading from a 1.4.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-5-0-migrating-from-1-3-x"></a>Migrating from 1.3.x

If you are upgrading from a 1.3.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-5-0-migrating-from-1-2-x"></a>Migrating from 1.2.x

If you are upgrading from a 1.2.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-5-0-migrating-from-1-1-x"></a>Migrating from 1.1.x

If you are upgrading from a 1.1.x release of Spring Cloud Services, no changes are required for client applications or Spring Cloud Services service instances.

## <a id="1-5-0-migrating-from-1-0-x"></a>Migrating from 1.0.x

The Spring Cloud Services client dependencies were restructured in 1.1.0. In 1.5.x, they are based on Spring Cloud Camden. To ensure compatibility of your client applications with Spring Cloud Services 1.5.x service instances, you must update your client applications to include the current dependencies and the Spring Boot and Spring Cloud Maven BOM dependencies. For information about upgrading Spring Cloud Services service instances after upgrading the Spring Cloud Services product, see the <a href="/spring-cloud-services/common/service-instance-upgrades.html">Service Instance Upgrades</a> topic. For complete information about the current Spring Cloud Services client dependencies, see <a href="/spring-cloud-services/common/client-dependencies.html">Client Dependencies</a>.

After upgrading a 1.0.x Circuit Breaker Dashboard service instance to a 1.5.x version, you must unbind, rebind, and restart any client applications which were bound to the instance. This is due to a change in how service instance credentials are managed.

## <a id="1-5-1"></a>1.5.1

**Release Date: 29th January 2018**

Enhancements included in this release:

* Fixed issue with _beta_ CredHub service broker integration that Spring Cloud Services supports. This issue occurred when the Spring Cloud Services service broker received an error from CredHub when attempting to delete credentials, the binding deletion or instance deletion operations would fail and leave service instance in broken state. The Spring Cloud Services broker now handles this situation by not failing due to failed CredHub binding deletion attempt.

## <a id="1-5-0"></a>1.5.0

**Release Date: 22nd December 2017**

Enhancements included in this release:

* The Spring Cloud Services service broker and worker apps now can use the Runtime CredHub to store service instance credentials. Operators can enable use of CredHub in the Spring Cloud Services tile settings. For more information, see the [Secure Service Instance Credentials with CredHub](/spring-cloud-services/tile-configuration.html#secure-service-instance-credentials-with-credhub) section of the [Tile Configuration](/spring-cloud-services/tile-configuration.html) topic.
* The dependent services used by the Spring Cloud Services service broker are now configurable during installation by operators. Operators can specify alternative services and service plans for the service broker's persistence store (the default is MySQL for PCF) and message bus (the default is RabbitMQ for PCF) services. For more information, see the [Installation](/spring-cloud-services/installation.html) topic.
    <p class='note'><strong>Note</strong>: The new settings for persistence store and message bus services affect the service broker's dependent services only (they do not affect services used by service instances).</p>
* The Config Server's composite backend now accepts the `pattern` and `searchPaths` properties for a Git backend within a composite. For more information, see the [Composite Backends](/spring-cloud-services/common/config-server/composite-backends.html) topic.
* The Spring Cloud Services service broker has been upgraded to Spring Boot 1.5.7 and Spring Cloud Edgware.RELEASE.
